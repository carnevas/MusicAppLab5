@model IEnumerable<MusicApp2017.Models.Album>
@using MusicApp2017.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}
<div class="navbar navbar-default">
    <div class="container">
        <div class="navbar-header">
            <button" class="navbar-toggle collapsed" data-toggle="collapse"
                     data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button">
            <a class="navbar-brand" href="#">Menu</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li class="active">
                    <a asp-action="Index" asp-controller="Albums">Albums</a>
                </li>
                <li class="active">
                    <a asp-action="Index" asp-controller="Artists">Artists</a>
                </li>
                <li class="active">
                    <a asp-action="Index" asp-controller="Genres">Genres</a>
                </li>
            </ul>
        </div>
    </div>
</div>
<h2>Albums</h2>
<p>
    <a asp-action="Create">Add Album</a>
</p>
@if (SignInManager.IsSignedIn(User) && ViewData["View"].Equals("FavoriteAlbums"))
{
    var Albums = new List<Album>();
    foreach (var item in Model)
    {
        if (item.Genre.Equals(UserManager.FindByNameAsync(User.Identity.Name).Result.Genre))
        {
            Albums.Add(item);
        }
    }
    if (Albums.Count == 0)
    {
        <h4>There are no albums in your favorite genre.</h4>
    }
    else
    { 
        <h3> Favorite Genre: @UserManager.FindByNameAsync(User.Identity.Name).Result.Genre.Name </h3>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Artist)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Genre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Rating)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Albums)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        <a asp-action="Details" asp-controller="Artists" asp-route-id="@item.ArtistID">
                            @Html.DisplayFor(modelItem => item.Artist.Name)
                        </a>
                    </td>
                    <td>
                        <a asp-action="Details" asp-controller="Genres" asp-route-id="@item.GenreID">
                            @Html.DisplayFor(modelItem => item.Genre.Name)
                        </a>
                    </td>
                    <td>
                        @if (item.Rating != 0)
                        {
                            Html.DisplayFor(modelItem => item.Rating);
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.AlbumID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.AlbumID">Delete</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Artist)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Genre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rating)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>

            <td>
                <a asp-action="Details" asp-controller="Artists" asp-route-id="@item.ArtistID">
                    @Html.DisplayFor(modelItem => item.Artist.Name)
                </a>
            </td>
            <td>
                <a asp-action="Details" asp-controller="Genres" asp-route-id="@item.GenreID">
                    @Html.DisplayFor(modelItem => item.Genre.Name)
                </a>
            </td>
            <td>
                @if (item.Rating == 0)
                {
                    Html.DisplayFor(modelItem => item.Rating);
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AlbumID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AlbumID">Delete</a>
            </td>
        </tr>
    }
        </tbody>
    </table>
}
@if (SignInManager.IsSignedIn(User))
{
    if (ViewData["View"].Equals("FavoriteAlbums"))
    {
        <a asp-action="Index" asp-route-all="true">View All Albums</a>
    }
    else
    {
        <a asp-action="Index">View All Albums in Favorite Genre</a>
    }
}
