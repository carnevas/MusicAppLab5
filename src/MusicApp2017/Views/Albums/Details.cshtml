@model MusicApp2017.Models.Album
@using MusicApp2017.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}
<div class="navbar navbar-default">
    <div class="container">
        <div class="navbar-header">
            <button" class="navbar-toggle collapsed" data-toggle="collapse"
                     data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button">
            <a class="navbar-brand" href="#">Menu</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li class="active">
                    <a asp-action="Index" asp-controller="Albums">Albums</a>
                </li>
                <li class="active">
                    <a asp-action="Index" asp-controller="Artists">Artists</a>
                </li>
                <li class="active">
                    <a asp-action="Index" asp-controller="Genres">Genres</a>
                </li>
            </ul>
        </div>
    </div>
</div>
<h3>Album Details</h3>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title):
        </dt>
        <dd>
            @Model.Title
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Artist):
        </dt>
        <dd>
            @Model.Artist.Name
        </dd>
        @if (Model.Artist.Bio != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Artist.Bio):
            </dt>
            <dd>
                @Model.Artist.Bio
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.Genre):
        </dt>
        <dd>
            @Model.Genre.Name
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd>
            @Model.Rating out of 5
        </dd>
    </dl>
</div>
@if (User.Identity.IsAuthenticated)
{
<hr/>
<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="AlbumID" value="@Model.AlbumID" />
    <input type="hidden" asp-for="UserID" value="@UserManager.FindByNameAsync(User.Identity.Name).Id" />
    <input type="hidden" asp-for="RatingID" />
    <div class="form-group">
        <label asp-for="RatingValue" class="control-label col-md-2"></label>
        <div class="col-md-10">
            <select asp-for="RatingValue" class="form-control" asp-items="ViewBag.Values"></select>
            <span asp-validation-for="RatingValue" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Rate" class="btn btn-default" />
        </div>
    </div>
</form>    
}
<div>
    <a asp-action="Edit" asp-route-id="@Model.AlbumID">Edit</a> |
    <a asp-action="Rate" asp-route-id="@Model.AlbumID">Rate Album</a>
    <a asp-action="Index">Album List</a>
</div>
